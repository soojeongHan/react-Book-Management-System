{"version":3,"sources":["components/Book.module.css","components/List.module.css","components/Layout.module.css","components/Add.module.css","hooks/useToken.ts","components/Layout.tsx","components/Book.tsx","components/List.tsx","redux/utils.ts","services/UserService.ts","services/TokenService.ts","redux/modules/auth.ts","services/BookService.ts","redux/modules/books.ts","containers/ListContainer.tsx","pages/Home.tsx","components/Add.tsx","redux/modules/rootReducer.ts","redux/modules/rootSaga.ts","redux/create.ts","hooks/useHistory.ts","containers/AddContainer.tsx","pages/Add.tsx","components/Signin.tsx","containers/SigninContainer.tsx","pages/Signin.tsx","pages/NotFound.tsx","pages/Error.tsx","components/Detail.tsx","containers/DetailContainer.tsx","pages/Detail.tsx","components/Edit.tsx","containers/EditContainer.tsx","pages/Edit.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Edit.module.css","components/Signin.module.css","components/Detail.module.css"],"names":["module","exports","useToken","useSelector","state","auth","token","Layout","children","className","styles","layout","React","memo","goDetail","goEditPage","goUrlPage","deleteBook","book","date","updatedAt","Date","createdAt","displayDate","getMonth","getDate","getFullYear","getHours","getMinutes","title","onClick","bookId","viewBox","focusable","data-icon","width","height","fill","aria-hidden","d","author","created","button_group","type","url","role","aria-label","Books","books","loading","goAdd","logout","extra","key","button","src","style","alt","dataSource","columns","dataIndex","render","text","record","showHeader","table","rowKey","pagination","getTokenFromState","UserService","email","password","axios","post","response","data","delete","headers","Authorization","TokenService","localStorage","getItem","setItem","removeItem","sagas","loginSaga","logoutSaga","options","prefix","createActions","SUCCESS","success","pending","fail","reducer","handleActions","PENDING","error","action","payload","FAIL","LOGIN","login","takeEvery","put","call","set","push","Error","select","remove","BOOK_API_URL","BookService","get","patch","getBookSaga","addBookSaga","editBookSaga","deleteBookSaga","getBooks","GET_BOOKS","addBook","ADD_BOOK","editBook","EDIT_BOOK","DELETE_BOOK","ListContainer","dispatch","useDispatch","useCallback","bookid","useEffect","getBooksSaga","window","location","assign","List","Home","to","Add","onGoBack","titleRef","useRef","messageRef","authorRef","urlRef","back_button","FormOutlined","subTitle","button_logout","bg","add","input_title","required","input_area","placeholder","ref","input","input_comment","rows","input_author","input_url","button_area","size","current","value","message","undefined","messageDialog","rootReducer","history","combineReducers","router","connectRouter","rootSaga","all","authSagas","booksSagas","createBrowserHistory","sagaMiddleware","createSagaMiddleware","create","persistConfig","storage","enhancedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","persistor","persistStore","run","goBack","AddContainer","Signin","emailRef","passwordRef","align","signin_row","span","signin_contents","signin_bg","signin_title","signin_subtitle","signin_underline","email_title","autoComplete","name","password_title","SigninContainer","SigninPage","NotFound","TextArea","Input","Detail","BookOutlined","detail","message_title","readOnly","message_textarea","DetailContainer","Number","pathname","split","pop","filter","v","Edit","edit","defaultValue","minHeight","EditContainer","App","FallbackComponent","exact","path","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4d5c62c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"book\":\"Book_book__jtfLd\",\"title\":\"Book_title__jGq6O\",\"link_detail_title\":\"Book_link_detail_title__3HVKB\",\"author\":\"Book_author__1oh1e\",\"link_detail_author\":\"Book_link_detail_author__j_2dZ\",\"created\":\"Book_created__2tKEJ\",\"tooltips\":\"Book_tooltips__2fLvl\",\"button_group\":\"Book_button_group__SlEv2\",\"link_url\":\"Book_link_url__1mAc_\",\"button_url\":\"Book_button_url__2mKTV\",\"button_edit\":\"Book_button_edit__1XB2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"List_button__1OD2o\",\"table\":\"List_table__Esp-V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__1flcg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Add_bg__2Axqv\",\"add\":\"Add_add__2jbiB\",\"input_title\":\"Add_input_title__FgNI2\",\"input_comment\":\"Add_input_comment__7VE0I\",\"input_author\":\"Add_input_author__ARSur\",\"input_url\":\"Add_input_url__3rTwD\",\"required\":\"Add_required__ScS66\",\"input_area\":\"Add_input_area__32fUU\",\"input\":\"Add_input__1YkRE\",\"button_area\":\"Add_button_area__K4Txl\",\"back_button\":\"Add_back_button__1i065\",\"button\":\"Add_button__gQfkH\",\"button_logout\":\"Add_button_logout__2KChV\"};","import { useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../redux/modules/rootReducer';\r\n\r\nexport default function useToken() {\r\n  const token = useSelector<RootState, string | null>(\r\n    (state) => state.auth.token,\r\n  );\r\n\r\n  return token;\r\n}\r\n","import React from 'react';\r\nimport styles from './Layout.module.css';\r\n\r\nconst Layout: React.FC = ({ children }) => (\r\n  <div className={styles.layout}>{children}</div>\r\n);\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\n\r\nimport styles from './Book.module.css';\r\nimport { BookResType } from '../types';\r\n\r\ninterface BookType extends BookResType {\r\n  goDetail: (bookid : number) => void;\r\n  goEditPage: (bookid : number) => void;\r\n  goUrlPage: (url : string) => void;\r\n  deleteBook: (bookId : number) => void;\r\n}\r\n\r\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\r\n// [project] BookResType 의 응답 값을 이용하여, Book 컴포넌트를 완성했다.\r\nconst Book: React.FC<BookType> = ({goDetail, goEditPage, goUrlPage, deleteBook ,...book}) => {\r\n  // Book의 updatedAt이 없으면, createdAt을 사용하여, 날짜를 표시한다.\r\n  const date : Date | null = book.updatedAt ? (book.updatedAt ? new Date(book.updatedAt) : null) : (book.createdAt ? new Date(book.createdAt) : null);\r\n  const displayDate : string = date ? ((date.getMonth()+1)+\"-\"+date.getDate()+\"-\"+date.getFullYear()+\" \"+date.getHours()%12+\":\"+date.getMinutes()+\" \"+(date.getHours() > 12 ? \"PM\" : \"AM\")) : \"\";\r\n\r\n  return <div className={styles.book}>\r\n    <div className={styles.title} onClick={() => goDetail(book.bookId)}>\r\n      <svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"book\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-260 72h96v209.9L621.5 312 572 347.4V136zm220 752H232V136h280v296.9c0 3.3 1 6.6 3 9.3a15.9 15.9 0 0022.3 3.7l83.8-59.9 81.4 59.4c2.7 2 6 3.1 9.4 3.1 8.8 0 16-7.2 16-16V136h64v752z\"></path></svg>\r\n      {book.title}\r\n    </div>\r\n    <div className={styles.author} onClick={() => goDetail(book.bookId)}>\r\n      {book.author}\r\n    </div>\r\n    <div className={styles.created}>{displayDate}</div>\r\n    <div className={styles.button_group}>\r\n      <button type=\"button\" className=\"ant-btn ant-btn-primary ant-btn-circle ant-btn-sm ant-btn-icon-only button_url\" onClick={() => goUrlPage(book.url)}><span role=\"img\" aria-label=\"home\" className=\"anticon anticon-home\"><svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"home\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M946.5 505L560.1 118.8l-25.9-25.9a31.5 31.5 0 00-44.4 0L77.5 505a63.9 63.9 0 00-18.8 46c.4 35.2 29.7 63.3 64.9 63.3h42.5V940h691.8V614.3h43.4c17.1 0 33.2-6.7 45.3-18.8a63.6 63.6 0 0018.7-45.3c0-17-6.7-33.1-18.8-45.2zM568 868H456V664h112v204zm217.9-325.7V868H632V640c0-22.1-17.9-40-40-40H432c-22.1 0-40 17.9-40 40v228H238.1V542.3h-96l370-369.7 23.1 23.1L882 542.3h-96.1z\"></path></svg></span></button>\r\n      <button type=\"button\" className=\"ant-btn ant-btn-circle ant-btn-sm ant-btn-icon-only button_edit\" onClick={() => goEditPage(book.bookId)}><span role=\"img\" aria-label=\"edit\" className=\"anticon anticon-edit\"><svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"edit\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\"></path></svg></span></button>\r\n      <button type=\"button\" className=\"ant-btn ant-btn-primary ant-btn-circle ant-btn-sm ant-btn-icon-only ant-btn-dangerous\" onClick={() => deleteBook(book.bookId)}><span role=\"img\" aria-label=\"delete\" className=\"anticon anticon-delete\"><svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"delete\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\"></path></svg></span></button>\r\n    </div>\r\n  </div>;\r\n};\r\n\r\nexport default React.memo(Book);\r\n","import React from 'react';\r\nimport { Table, PageHeader, Button } from 'antd';\r\n\r\nimport styles from './List.module.css';\r\nimport Layout from './Layout';\r\nimport Book from './Book';\r\nimport { BookResType } from '../types';\r\n\r\ninterface BooksProps {\r\n  books: BookResType[] | null;\r\n  loading: boolean;\r\n  goAdd: () => void;\r\n  goDetail: (bookid: number) => void;\r\n  goEditPage: (bookid: number) => void;\r\n  logout: () => void;\r\n  goUrlPage: (url : string) => void;\r\n  deleteBook: (bookId: number) => void;\r\n}\r\n\r\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\r\n// [project] BookResType 의 응답 값을 이용하여, List 컴포넌트의 키를 처리했다.\r\nconst Books: React.FC<BooksProps> = ({ books, loading, goAdd, logout, goDetail, goEditPage, goUrlPage, deleteBook }) => {\r\n  return (\r\n    <Layout>\r\n      <PageHeader\r\n        title={<div>Book List</div>}\r\n        extra={[\r\n          <Button\r\n            key=\"2\"\r\n            type=\"primary\"\r\n            className={styles.button}\r\n            onClick={goAdd}\r\n          >\r\n            Add Book\r\n          </Button>,\r\n          <Button\r\n            key=\"1\"\r\n            type=\"primary\"\r\n            className={styles.button}\r\n            onClick={logout}\r\n          >\r\n            Logout\r\n          </Button>,\r\n        ]}\r\n      />\r\n      <img src=\"/bg_list.png\" style={{ width: '100%' }} alt=\"books\" />\r\n      \r\n      <Table\r\n        dataSource={books || []}\r\n        columns={[\r\n          {\r\n            title: 'Book',\r\n            dataIndex: 'book',\r\n            key: 'book',\r\n            render: (text, record) => (\r\n              <Book {...record} key={'{record.bookId}'} goDetail={goDetail} goEditPage={goEditPage} goUrlPage={goUrlPage} deleteBook={deleteBook}/>\r\n            ),\r\n          },\r\n        ]}\r\n        loading={books === null || loading}\r\n        showHeader={false}\r\n        className={styles.table}\r\n        rowKey=\"bookId\"\r\n        pagination={false}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Books;","import { RootState } from './modules/rootReducer';\r\nimport { BookResType } from '../types';\r\n\r\nexport function getTokenFromState(state: RootState): string | null {\r\n  return state.auth.token;\r\n}\r\n\r\nexport function getBooksFromState(state: RootState): BookResType[] | null {\r\n  return state.books.books;\r\n}\r\n","import axios from 'axios';\r\n\r\nimport { LoginReqType, LoginResType } from '../types';\r\n\r\nconst USER_API_URL = 'https://api.marktube.tv/v1/me';\r\n\r\nexport default class UserService {\r\n  public static async login({\r\n    email,\r\n    password,\r\n  }: LoginReqType): Promise<string> {\r\n    const response = await axios.post<LoginResType>(USER_API_URL, {\r\n      email,\r\n      password,\r\n    });\r\n    return response.data.token;\r\n  }\r\n\r\n  public static async logout(token: string): Promise<void> {\r\n    await axios.delete(USER_API_URL, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  }\r\n}\r\n","const LOCAL_STORAGE_TOKEN_KEY_NAME = 'token';\r\n\r\nexport default class TokenService {\r\n  public static get(): string | null {\r\n    return localStorage.getItem(LOCAL_STORAGE_TOKEN_KEY_NAME);\r\n  }\r\n\r\n  public static set(token: string): void {\r\n    localStorage.setItem(LOCAL_STORAGE_TOKEN_KEY_NAME, token);\r\n  }\r\n\r\n  public static remove(): void {\r\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_KEY_NAME);\r\n  }\r\n}\r\n","import { AnyAction } from 'redux';\r\nimport { createActions, handleActions } from 'redux-actions';\r\n/* \r\n  call() 함수는 인자로 받은 함수를 실행해 주는 역할\r\n  put() 함수는 액션을 스토어로 디스패치하는 역할\r\n  take~() : 액션을 모니터링하는 함수\r\n    takeEvery() : 특정 액션 타입에 대하여 디스패치되는 모든 액션들을 처리하는 것\r\n    takeLatest() : 특정 액션 타입에 대하여 디스패치된 가장 마지막 액션만을 처리하는 함수\r\n*/\r\nimport { takeEvery, put, call, select } from 'redux-saga/effects';\r\nimport { push } from 'connected-react-router';\r\n\r\nimport { LoginReqType } from '../../types';\r\nimport { getTokenFromState } from '../utils';\r\nimport UserService from '../../services/UserService';\r\nimport TokenService from '../../services/TokenService';\r\n\r\nexport interface AuthState {\r\n  token: string | null;\r\n  loading: boolean;\r\n  error: Error | null;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  token: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst options = {\r\n  prefix: 'my-books/auth',\r\n};\r\n\r\nexport const { success, pending, fail } = createActions(\r\n  {\r\n    SUCCESS: (token: string) => ({ token }),\r\n  },\r\n  'PENDING',\r\n  'FAIL',\r\n  options,\r\n);\r\n\r\nconst reducer = handleActions<AuthState, any>(\r\n  {\r\n    PENDING: (state) => ({\r\n      ...state,\r\n      loading: true,\r\n      error: null,\r\n    }),\r\n    SUCCESS: (state, action) => ({\r\n      ...state,\r\n      token: action.payload.token,\r\n      loading: false,\r\n      error: null,\r\n    }),\r\n    FAIL: (state, action) => ({\r\n      ...state,\r\n      loading: false,\r\n      error: action.payload,\r\n    }),\r\n  },\r\n  initialState,\r\n  options,\r\n);\r\n\r\nexport default reducer;\r\n\r\nexport const { login, logout } = createActions(\r\n  {\r\n    LOGIN: ({ email, password }: LoginReqType) => ({\r\n      email,\r\n      password,\r\n    }),\r\n  },\r\n  'LOGOUT',\r\n  options,\r\n);\r\n\r\nexport function* sagas() {\r\n  yield takeEvery(`${options.prefix}/LOGIN`, loginSaga);\r\n  yield takeEvery(`${options.prefix}/LOGOUT`, logoutSaga);\r\n}\r\n\r\ninterface LoginSagaAction extends AnyAction {\r\n  payload: LoginReqType;\r\n}\r\n\r\nfunction* loginSaga(action: LoginSagaAction) {\r\n  try {\r\n    yield put(pending());\r\n    const token: string = yield call(UserService.login, action.payload);\r\n    TokenService.set(token);\r\n    yield put(success(token));\r\n    yield put(push('/'));\r\n  } catch (error) {\r\n    yield put(fail(new Error(error?.response?.data?.error || 'UNKNOWN_ERROR')));\r\n  }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield put(pending());\r\n    const token: string = yield select(getTokenFromState);\r\n    yield call(UserService.logout, token);\r\n  } catch (error) {\r\n    // console.log(error);\r\n  } finally {\r\n    TokenService.remove();\r\n    yield put(success(null));\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nimport { BookReqType, BookResType } from '../types';\r\n\r\nconst BOOK_API_URL = 'https://api.marktube.tv/v1/book';\r\n\r\nexport default class BookService {\r\n  public static async getBooks(token: string): Promise<BookResType[]> {\r\n    const response = await axios.get<BookResType[]>(BOOK_API_URL, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  public static async addBook(\r\n    token: string,\r\n    book: BookReqType,\r\n  ): Promise<BookResType> {\r\n    const response = await axios.post<BookResType>(BOOK_API_URL, book, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  public static async editBook(\r\n    token: string,\r\n    bookId: number,\r\n    book: BookReqType,\r\n  ): Promise<BookResType> {\r\n    const response = await axios.patch<BookResType>(\r\n      `${BOOK_API_URL}/${bookId}`,\r\n      book,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  public static async deleteBook(token: string, bookId: number): Promise<void> {\r\n    await axios.delete(`${BOOK_API_URL}/${bookId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { BookResType } from '../../types';\r\nimport { createActions, handleActions } from 'redux-actions';\r\nimport { call, put, select, takeEvery } from 'redux-saga/effects';\r\nimport { push } from 'connected-react-router';\r\nimport BookService from '../../services/BookService';\r\nimport { getTokenFromState } from '../utils';\r\n\r\nexport interface BooksState {\r\n  books: BookResType[] | null;\r\n  loading: boolean;\r\n  error: Error | null;\r\n}\r\n\r\nconst initialState: BooksState = {\r\n  books: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst options = {\r\n  prefix: 'my-books/books',\r\n};\r\n\r\n// [project] redux-action 을 이용하여, books 모듈의 액션 생성 함수와 리듀서를 작성했다.\r\nexport const { success, pending, fail } = createActions(\r\n  {\r\n    SUCCESS: (books) => ({ books }) ,\r\n  },\r\n  'PENDING',\r\n  'FAIL',\r\n  options,\r\n);\r\n\r\n\r\nconst reducer = handleActions<BooksState, any>(\r\n  {\r\n    PENDING: (state) => ({\r\n      ...state,\r\n      loading: true,\r\n      error: null,\r\n    }),\r\n    SUCCESS: (state, action) => ({\r\n      ...state,\r\n      books: action.payload.books,\r\n      loading: false,\r\n      error: null,\r\n    }),\r\n    FAIL: (state, action) => ({\r\n      ...state,\r\n      loading: false,\r\n      error: action.payload,\r\n    }),\r\n  },\r\n  initialState,\r\n  options,\r\n);\r\n\r\nexport default reducer;\r\n\r\n// [project] 책 목록을 가져오는 saga 함수를 작성했다.\r\n// [project] 책을 추가하는 saga 함수를 작성했다.\r\n// [project] 책을 삭제하는 saga 함수를 작성했다.\r\n// [project] 책을 수정하는 saga 함수를 작성했다.\r\n\r\n// [project] saga 함수를 실행하는 액션과 액션 생성 함수를 작성했다.\r\n\r\nexport const { getBooks } = createActions(\r\n  {\r\n    GET_BOOKS: (url) => ({url})\r\n  },\r\n  options,\r\n);\r\n\r\nexport const { addBook } = createActions(\r\n  {\r\n    ADD_BOOK: (book) => ({book})\r\n  },\r\n  options,\r\n)\r\n\r\nexport const { editBook } = createActions(\r\n  {\r\n    EDIT_BOOK: (book, bookId) => ({book, bookId})\r\n  },\r\n  options,\r\n)\r\n\r\nexport const { deleteBook } = createActions(\r\n  {\r\n    DELETE_BOOK: (bookId) => ({bookId})\r\n  },\r\n  options,\r\n)\r\n\r\nexport function* sagas() {\r\n  yield takeEvery(`${options.prefix}/GET_BOOKS`, getBookSaga);\r\n  yield takeEvery(`${options.prefix}/ADD_BOOK`, addBookSaga);\r\n  yield takeEvery(`${options.prefix}/EDIT_BOOK`, editBookSaga);\r\n  yield takeEvery(`${options.prefix}/DELETE_BOOK`, deleteBookSaga);\r\n}\r\n\r\nfunction* getBookSaga(action: any) {\r\n  try {\r\n    yield put(pending());\r\n    const token: string = yield select(getTokenFromState);\r\n    const books: BookResType[] = yield call(BookService.getBooks, token);\r\n    yield put(success(books));\r\n    yield put(push(action.payload.url ? action.payload.url : \"/\"));\r\n  } catch (error) {\r\n    yield put(fail(new Error(error?.response?.data?.error || 'UNKNOWN_ERROR')));\r\n  }\r\n}\r\n\r\nfunction* addBookSaga(action: any) {\r\n  try {\r\n    yield put(pending());\r\n    const token: string = yield select(getTokenFromState);\r\n    yield call(BookService.addBook, token, action.payload.book);\r\n    const books: BookResType[] = yield call(BookService.getBooks, token);\r\n    yield put(success(books));\r\n    yield put(push('/'));\r\n  } catch (error) {\r\n    yield put(fail(new Error(error?.response?.data?.error || 'UNKNOWN_ERROR')));\r\n  }\r\n}\r\n\r\nfunction* editBookSaga(action: any) {\r\n  try {\r\n    yield put(pending());\r\n    const token: string = yield select(getTokenFromState);\r\n    yield call(BookService.editBook, token, action.payload.bookId ,action.payload.book);\r\n    const books: BookResType[] = yield call(BookService.getBooks, token);\r\n    yield put(success(books));\r\n    yield put(push('/'));\r\n  } catch (error) {\r\n    yield put(fail(new Error(error?.response?.data?.error || 'UNKNOWN_ERROR')));\r\n  }\r\n}\r\n\r\nfunction* deleteBookSaga(action: any) {\r\n  try {\r\n    yield put(pending());\r\n    const token: string = yield select(getTokenFromState);\r\n    yield call(BookService.deleteBook, token, action.payload.bookId);\r\n    const books: BookResType[] = yield call(BookService.getBooks, token);\r\n    yield put(success(books));\r\n    yield put(push('/'));\r\n  } catch (error) {\r\n    yield put(fail(new Error(error?.response?.data?.error || 'UNKNOWN_ERROR')));\r\n  }\r\n}","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport List from '../components/List';\r\nimport { logout as logoutSaga } from '../redux/modules/auth';\r\nimport { getBooks as getBooksSaga } from \"../redux/modules/books\";\r\nimport { push } from 'connected-react-router';\r\nimport { RootState } from '../redux/modules/rootReducer';\r\nimport { BookResType } from '../types';\r\nimport { deleteBook as deleteBookSaga } from \"../redux/modules/books\";\r\n\r\nconst ListContainer: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const goAdd = useCallback(() => {\r\n    dispatch(push('/add'));\r\n  }, [dispatch]);\r\n  const logout = useCallback(() => {\r\n    dispatch(logoutSaga());\r\n  }, [dispatch]);\r\n  const goDetail = useCallback((bookid) => {\r\n    dispatch(push(`/book/${bookid}`));\r\n  }, [dispatch]);\r\n  const goEditPage = useCallback((bookid) => {\r\n    dispatch(push(`/edit/${bookid}`));\r\n  }, [dispatch])\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(getBooksSaga());\r\n  }, [dispatch]);\r\n\r\n  const books = useSelector<RootState, BookResType[] | null>(state => {\r\n    return state.books.books\r\n  })\r\n\r\n  const goUrlPage = useCallback((url : string) => {\r\n    // 해당 페이지에서 새로운 페이지를 만들고, URL 주소로 페이지 열기\r\n    // window.open('about:blank')?.location.assign(`http://${url}`);\r\n    \r\n    // 해당 페이지에서 바로 URL 주소로 페이지 열기\r\n    window.location.assign(`http://${url}`);\r\n  }, []);\r\n\r\n  const deleteBook = useCallback((bookId : number) => {\r\n    dispatch(deleteBookSaga(bookId));\r\n  }, [dispatch]);\r\n  \r\n  // [project] saga 함수를 실행하는 액션 생성 함수를 실행하는 함수를 컨테이너에 작성했다.\r\n  // [project] 컨테이너에서 useDispatch, useSelector, useCallback 을 활용해서 중복없이 비동기 데이터를 보여주도록 처리했다.\r\n\r\n  return <List books={books} loading={false} goAdd={goAdd} logout={logout} goDetail={goDetail} goEditPage={goEditPage} goUrlPage={goUrlPage} deleteBook={deleteBook}/>;\r\n};\r\n\r\nexport default ListContainer;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport useToken from '../hooks/useToken';\r\nimport ListContainer from '../containers/ListContainer';\r\n\r\nconst Home: React.FC = () => {\r\n  const token = useToken();\r\n  if (token === null) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  return <ListContainer />;\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { message as messageDialog, PageHeader, Input, Button } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { FormOutlined } from '@ant-design/icons';\r\n\r\nimport Layout from './Layout';\r\nimport styles from './Add.module.css';\r\nimport { BookReqType } from '../types';\r\n\r\ninterface AddProps {\r\n  loading: boolean;\r\n  logout: () => void;\r\n  onGoBack: () => void;\r\n  addBook: (book : BookReqType) => void;\r\n}\r\n\r\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\r\nconst Add: React.FC<AddProps> = ({ loading, logout, onGoBack, addBook }) => {\r\n  const titleRef = React.useRef<Input>(null);\r\n  const messageRef = React.useRef<TextArea>(null);\r\n  const authorRef = React.useRef<Input>(null);\r\n  const urlRef = React.useRef<Input>(null);\r\n\r\n  return (\r\n    <Layout>      \r\n      <PageHeader\r\n        title={\r\n          <div>\r\n            <button className={styles.back_button} onClick={onGoBack}><svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"arrow-left\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 000 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\"></path></svg></button>\r\n            <FormOutlined /> Add Book\r\n          </div>\r\n        }\r\n        subTitle=\"Add Your Book\"\r\n        extra={[\r\n          <Button\r\n            key=\"1\"\r\n            type=\"primary\"\r\n            className={styles.button_logout}\r\n            onClick={logout}\r\n          >\r\n            Logout\r\n          </Button>,\r\n        ]}\r\n      />\r\n\r\n      <img src=\"/bg_list.png\" className={styles.bg} alt=\"books\" />\r\n\r\n      <div className={styles.add}>\r\n        <div className={styles.input_title}>\r\n          Title\r\n          <span className={styles.required}> *</span>\r\n        </div>\r\n        <div className={styles.input_area}>\r\n          <Input placeholder=\"Title\" ref={titleRef} className={styles.input} />\r\n        </div>\r\n        <div className={styles.input_comment}>\r\n          Comment\r\n          <span className={styles.required}> *</span>\r\n        </div>\r\n        <div className={styles.input_area}>\r\n          <TextArea\r\n            rows={4}\r\n            placeholder=\"Comment\"\r\n            ref={messageRef}\r\n            className={styles.input}\r\n          />\r\n        </div>\r\n        <div className={styles.input_author}>\r\n          Author\r\n          <span className={styles.required}> *</span>\r\n        </div>\r\n        <div className={styles.input_area}>\r\n          <Input\r\n            placeholder=\"Author\"\r\n            ref={authorRef}\r\n            className={styles.input}\r\n          />\r\n        </div>\r\n        <div className={styles.input_url}>\r\n          URL\r\n          <span className={styles.required}> *</span>\r\n        </div>\r\n        <div className={styles.input_area}>\r\n          <Input placeholder=\"URL\" ref={urlRef} className={styles.input} />\r\n        </div>\r\n        <div className={styles.button_area}>\r\n          <Button\r\n            size=\"large\"\r\n            loading={loading}\r\n            onClick={click}\r\n            className={styles.button}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n\r\n  function click() {\r\n    const title = titleRef.current!.state.value;\r\n    const message = messageRef.current!.state.value;\r\n    const author = authorRef.current!.state.value;\r\n    const url = urlRef.current!.state.value;\r\n\r\n    if (\r\n      title === undefined ||\r\n      message === undefined ||\r\n      author === undefined ||\r\n      url === undefined\r\n    ) {\r\n      messageDialog.error('Please fill out all inputs');\r\n      return ;\r\n    } else {\r\n      const book : BookReqType ={\r\n        title,\r\n        message,\r\n        author,\r\n        url\r\n      }\r\n      addBook(book);\r\n    }\r\n  }\r\n};\r\nexport default Add;\r\n","import { combineReducers, AnyAction, Reducer } from 'redux';\r\nimport { connectRouter, RouterState } from 'connected-react-router';\r\nimport { History } from 'history';\r\n\r\nimport books, { BooksState } from './books';\r\nimport auth, { AuthState } from './auth';\r\n\r\nexport interface RootState {\r\n  books: BooksState;\r\n  auth: AuthState;\r\n  router: Reducer<RouterState<unknown>, AnyAction>;\r\n}\r\n\r\nconst rootReducer = (history: History<unknown>) =>\r\n  combineReducers({\r\n    books,\r\n    auth,\r\n    router: connectRouter(history),\r\n  });\r\n\r\nexport default rootReducer;\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport { sagas as authSagas } from './auth';\r\nimport { sagas as booksSagas } from './books';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([authSagas(), booksSagas()]);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createBrowserHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './modules/rootReducer';\r\nimport rootSaga from './modules/rootSaga';\r\nimport TokenService from '../services/TokenService';\r\n// react-persist : 리액트 컴포넌트가 새로고침되더라도 상태를 유지시켜주는 라이브러리, 참고 : <https://levelup.gitconnected.com/persisting-your-react-application-state-with-redux-and-typescript-51e4e66c4e53>\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nexport const history = createBrowserHistory();\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst create = () => {\r\n  const token = TokenService.get();\r\n\r\n  const persistConfig = {\r\n    // key : ‘root’ means that the whole state gets persisted\r\n    key: 'root',\r\n    // storage : Indicates what kind of storage is used, there are many options available.\r\n    storage\r\n  };\r\n  \r\n  const enhancedReducer = persistReducer(persistConfig, rootReducer(history));\r\n\r\n  const store = createStore(\r\n    enhancedReducer,\r\n    {\r\n      auth: {\r\n        token,\r\n        loading: false,\r\n        error: null,\r\n      },\r\n    },\r\n    composeWithDevTools(\r\n      applyMiddleware(routerMiddleware(history), sagaMiddleware),\r\n    ),\r\n  );\r\n  const persistor = persistStore(store);\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return {store, persistor};\r\n};\r\n\r\nexport default create;\r\n","import { history } from '../redux/create';\r\n\r\nexport const onGoBack = () => history.goBack();","import React, { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Add from '../components/Add';\r\nimport { onGoBack } from '../hooks/useHistory';\r\nimport { logout as logoutSaga } from '../redux/modules/auth';\r\nimport { addBook as addBookSaga } from '../redux/modules/books';\r\nimport { BookReqType } from '../types';\r\n\r\nconst AddContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const logout = useCallback(() => {\r\n    dispatch(logoutSaga());\r\n  }, [dispatch]);\r\n  \r\n  const addBook = useCallback((book : BookReqType) => {\r\n    dispatch(addBookSaga(book));\r\n  }, [dispatch]);\r\n  \r\n  // [project] saga 함수를 실행하는 액션 생성 함수를 실행하는 함수를 컨테이너에 작성했다.\r\n  // [project] 컨테이너에서 useDispatch, useSelector, useCallback 을 활용해서 중복없이 비동기 데이터를 보여주도록 처리했다.\r\n\r\n  return <Add loading={false} logout={logout} onGoBack={onGoBack} addBook={addBook}/>;\r\n};\r\n\r\nexport default AddContainer;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport useToken from '../hooks/useToken';\r\nimport AddContainer from '../containers/AddContainer';\r\n\r\nconst Add = () => {\r\n  const token = useToken();\r\n  if (token === null) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  return <AddContainer />;\r\n};\r\n\r\nexport default Add;\r\n","import React, { useEffect } from 'react';\r\nimport { Row, Col, Button, Input, message } from 'antd';\r\n\r\nimport styles from './Signin.module.css';\r\nimport { LoginReqType } from '../types';\r\n\r\ninterface SigninProps {\r\n  loading: boolean;\r\n  error: Error | null;\r\n  login: ({ email, password }: LoginReqType) => void;\r\n}\r\n\r\nconst Signin: React.FC<SigninProps> = ({ loading, login, error }) => {\r\n  const emailRef = React.useRef<Input>(null);\r\n  const passwordRef = React.useRef<Input>(null);\r\n\r\n  useEffect(() => {\r\n    if (error === null) return;\r\n\r\n    switch (error.message) {\r\n      case 'USER_NOT_EXIST':\r\n        message.error('User not exist');\r\n        break;\r\n      case 'PASSWORD_NOT_MATCH':\r\n        message.error('Wrong password');\r\n        break;\r\n      default:\r\n        message.error('Unknown error occured');\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    <form>\r\n      <Row align=\"middle\" className={styles.signin_row}>\r\n        <Col span={24}>\r\n          <Row className={styles.signin_contents}>\r\n            <Col span={12}>\r\n              <img\r\n                src=\"/bg_signin.png\"\r\n                alt=\"Signin\"\r\n                className={styles.signin_bg}\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <div className={styles.signin_title}>My Books</div>\r\n              <div className={styles.signin_subtitle}>\r\n                Please Note Your Opinion\r\n              </div>\r\n              <div className={styles.signin_underline} />\r\n              <div className={styles.email_title}>\r\n                Email\r\n                <span className={styles.required}> *</span>\r\n              </div>\r\n              <div className={styles.input_area}>\r\n                <Input\r\n                  placeholder=\"Email\"\r\n                  autoComplete=\"email\"\r\n                  name=\"email\"\r\n                  ref={emailRef}\r\n                  className={styles.input}\r\n                />\r\n              </div>\r\n              <div className={styles.password_title}>\r\n                Password\r\n                <span className={styles.required}> *</span>\r\n              </div>\r\n              <div className={styles.input_area}>\r\n                <Input\r\n                  type=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  ref={passwordRef}\r\n                  className={styles.input}\r\n                />\r\n              </div>\r\n              <div className={styles.button_area}>\r\n                <Button\r\n                  size=\"large\"\r\n                  loading={loading}\r\n                  onClick={click}\r\n                  className={styles.button}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </form>\r\n  );\r\n\r\n  function click() {\r\n    const email = emailRef.current?.state.value;\r\n    const password = passwordRef.current?.state.value;\r\n\r\n    login({ email, password });\r\n  }\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Signin from '../components/Signin';\r\nimport { RootState } from '../redux/modules/rootReducer';\r\nimport { login as loginSaga } from '../redux/modules/auth';\r\nimport { LoginReqType } from '../types';\r\n\r\nconst SigninContainer: React.FC = () => {\r\n  const loading = useSelector<RootState, boolean>(\r\n    (state) => state.auth.loading,\r\n  );\r\n  \r\n  const error = useSelector<RootState, Error | null>(\r\n    (state) => state.auth.error,\r\n  );\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const login = useCallback(\r\n    ({ email, password }: LoginReqType) => {\r\n      dispatch(loginSaga({ email, password }));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return <Signin loading={loading} error={error} login={login} />;\r\n};\r\n\r\nexport default SigninContainer;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport useToken from '../hooks/useToken';\r\nimport SigninContainer from '../containers/SigninContainer';\r\n\r\nconst SigninPage = () => {\r\n  const token = useToken();\r\n  if (token !== null) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return <SigninContainer />;\r\n};\r\n\r\nexport default SigninPage;\r\n","import React from 'react';\r\nimport { history } from '../redux/create';\r\n\r\nconst NotFound: React.FC = () => (\r\n  <div>\r\n    <h1>NotFound {history.location}</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { FallbackProps } from 'react-error-boundary';\r\n\r\nconst Error: React.FC<FallbackProps> = ({ error }) => {\r\n  if (error === undefined) {\r\n    return <div>Unknown Error</div>;\r\n  }\r\n  return <div>{error.message}</div>;\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport { PageHeader, Button, Input } from 'antd';\r\nimport { BookOutlined } from '@ant-design/icons';\r\n\r\nimport Layout from './Layout';\r\nimport { BookResType } from '../types';\r\nimport styles from './Detail.module.css';\r\n\r\nconst { TextArea } = Input;\r\n\r\ninterface DetailProps {\r\n  book: BookResType | null | undefined;\r\n  logout: () => void;\r\n  onGoBack: () => void;\r\n  goEditPage: () => void;\r\n}\r\n\r\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\r\n// [project] BookResType 의 응답 값을 이용하여, Detail 컴포넌트를 완성했다.\r\nconst Detail: React.FC<DetailProps> = ({ book, logout, onGoBack, goEditPage }) => {\r\n  if (book === null) {\r\n    return null;\r\n  }\r\n\r\n  if (book === undefined) {\r\n    return (\r\n      <div>\r\n        <h1>NotFound Book</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <PageHeader\r\n        title={\r\n          <div>\r\n            <button className={styles.back_button} onClick={onGoBack}><svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"arrow-left\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 000 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\"></path></svg></button>\r\n            <BookOutlined /> {book.title}\r\n          </div>\r\n        }\r\n        subTitle={book.author}\r\n        extra={[\r\n          <Button\r\n            key=\"2\"\r\n            type=\"primary\"\r\n            onClick={goEditPage}\r\n            className={styles.button}\r\n          >\r\n            Edit\r\n          </Button>,\r\n          <Button\r\n            key=\"1\"\r\n            type=\"primary\"\r\n            className={styles.button}\r\n            onClick={logout}\r\n          >\r\n            Logout\r\n          </Button>,\r\n        ]}\r\n      />\r\n\r\n      <img src=\"/bg_list.png\" className={styles.bg} alt=\"books\" />\r\n\r\n      <div className={styles.detail}>\r\n        <div className={styles.message_title}></div>\r\n        <div className={styles.message}>\r\n          <TextArea\r\n            rows={4}\r\n            value={book.message}\r\n            readOnly\r\n            className={styles.message_textarea}\r\n          />\r\n        </div>\r\n        <div className={styles.button_area}></div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n\r\n};\r\nexport default Detail;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Detail from '../components/Detail';\r\nimport { logout as logoutSaga } from '../redux/modules/auth';\r\nimport { RootState } from '../redux/modules/rootReducer';\r\nimport { BookResType } from '../types';\r\nimport { history } from '../redux/create';\r\nimport { onGoBack } from '../hooks/useHistory';\r\n\r\nconst DetailContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const logout = useCallback(() => {\r\n    dispatch(logoutSaga());\r\n  }, [dispatch]);\r\n  \r\n  const books = useSelector<RootState, BookResType[] | null>(state => {\r\n    return state.books.books\r\n  })\r\n\r\n  const bookId : number | undefined = Number(history.location.pathname.split(\"/\").pop());\r\n  const book : BookResType | undefined = books?.filter(v => v.bookId === bookId).pop();\r\n\r\n  const goEditPage = useCallback(() => {\r\n    history.push(`/edit/${bookId}`);\r\n  }, [bookId])\r\n  \r\n  // [project] saga 함수를 실행하는 액션 생성 함수를 실행하는 함수를 컨테이너에 작성했다.\r\n  // [project] 컨테이너에서 useDispatch, useSelector, useCallback 을 활용해서 중복없이 비동기 데이터를 보여주도록 처리했다.\r\n  // [project] Edit 나 Detail 컴포넌트에서 새로고침 시, 리스트가 없는 경우, 리스트를 받아오도록 처리했다.\r\n\r\n  return <Detail book={book} logout={logout} onGoBack={onGoBack} goEditPage={goEditPage}/>;\r\n};\r\n\r\nexport default DetailContainer;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport useToken from '../hooks/useToken';\r\nimport DetailContainer from '../containers/DetailContainer';\r\n\r\nconst Detail = () => {\r\n  const token = useToken();\r\n  if (token === null) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  return <DetailContainer />;\r\n};\r\n\r\nexport default Detail;\r\n","import React, { useRef } from 'react';\r\nimport { message as messageDialog, PageHeader, Input, Button } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { FormOutlined } from '@ant-design/icons';\r\n\r\nimport Layout from './Layout';\r\nimport { BookReqType, BookResType } from '../types';\r\nimport styles from './Edit.module.css';\r\n\r\ninterface EditProps {\r\n  book: BookResType | undefined | null;\r\n  loading: boolean;\r\n  logout: () => void;\r\n  onGoBack: () => void;\r\n  editBook: (book: BookReqType) => void;\r\n}\r\n\r\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\r\n// [project] BookResType 의 응답 값을 이용하여, Edit 컴포넌트를 완성했다.\r\nconst Edit: React.FC<EditProps> = ({ book, loading, logout, onGoBack, editBook }) => {\r\n  const titleRef = useRef<Input>(null);\r\n  const messageRef = useRef<TextArea>(null);\r\n  const authorRef = useRef<Input>(null);\r\n  const urlRef = useRef<Input>(null);\r\n\r\n  if (book === null) {\r\n    return null;\r\n  }\r\n\r\n  if (book === undefined) {\r\n    return (\r\n      <div>\r\n        <h1>NotFound Book</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <PageHeader\r\n        title={\r\n          <div>\r\n            <button className={styles.back_button} onClick={onGoBack}><svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"arrow-left\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 000 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\"></path></svg></button>\r\n            <FormOutlined /> Edit Book\r\n          </div>\r\n        }\r\n        subTitle=\"Edit Your Book\"\r\n        extra={[\r\n          <Button\r\n            key=\"1\"\r\n            type=\"primary\"\r\n            className={styles.button_logout}\r\n            onClick={logout}\r\n          >\r\n            Logout\r\n          </Button>,\r\n        ]}\r\n      />\r\n\r\n      <img src=\"/bg_list.png\" className={styles.bg} alt=\"books\" />\r\n\r\n      <div className={styles.edit}>\r\n        <div className={styles.input_title}>\r\n          Title\r\n          <span className={styles.required}> *</span>\r\n        </div>\r\n        <div className={styles.input_area}>\r\n          <Input\r\n            placeholder=\"Title\"\r\n            ref={titleRef}\r\n            defaultValue={book.title || ''}\r\n            className={styles.input}\r\n          />\r\n        </div>\r\n        <div className={styles.input_comment}>\r\n          Comment\r\n          <span className={styles.required}> *</span>\r\n        </div>\r\n        <div className={styles.input_area}>\r\n          <TextArea\r\n            rows={4}\r\n            placeholder=\"Comment\"\r\n            ref={messageRef}\r\n            defaultValue={book.message || ''}\r\n            className={styles.input}\r\n            style={{ minHeight: 100 }}\r\n          />\r\n        </div>\r\n        <div className={styles.input_author}>Author</div>\r\n        <div className={styles.input_area}>\r\n          <Input\r\n            placeholder=\"Author\"\r\n            ref={authorRef}\r\n            defaultValue={book.author || ''}\r\n            className={styles.input}\r\n          />\r\n        </div>\r\n        <div className={styles.input_url}>URL</div>\r\n        <div className={styles.input_area}>\r\n          <Input\r\n            placeholder=\"URL\"\r\n            ref={urlRef}\r\n            defaultValue={book.url || ''}\r\n            className={styles.input}\r\n          />\r\n        </div>\r\n        <div className={styles.button_area}>\r\n          <Button\r\n            size=\"large\"\r\n            loading={loading}\r\n            onClick={click}\r\n            className={styles.button}\r\n          >\r\n            Update\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n\r\n  function click() {\r\n    const title = titleRef.current!.state.value;\r\n    const message = messageRef.current!.state.value;\r\n    const author = authorRef.current!.state.value;\r\n    const url = urlRef.current!.state.value;\r\n\r\n    if (\r\n      title === undefined ||\r\n      message === undefined ||\r\n      author === undefined ||\r\n      url === undefined\r\n    ) {\r\n      messageDialog.error('Please fill out all inputs');\r\n      return ;\r\n    }\r\n    else {\r\n      editBook({\r\n        title,\r\n        message,\r\n        author,\r\n        url,\r\n      })\r\n    }\r\n  }\r\n};\r\nexport default Edit;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editBook as editBookSaga } from \"../redux/modules/books\";\r\nimport Edit from '../components/Edit';\r\nimport { onGoBack } from '../hooks/useHistory';\r\nimport { logout as logoutSaga } from '../redux/modules/auth';\r\nimport { RootState } from '../redux/modules/rootReducer';\r\nimport { BookReqType, BookResType } from '../types';\r\nimport { history } from '../redux/create';\r\n\r\nconst EditContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const logout = useCallback(() => {\r\n    dispatch(logoutSaga());\r\n  }, [dispatch]);\r\n\r\n  const books = useSelector<RootState, BookResType[] | null>(state => {\r\n    return state.books.books\r\n  })\r\n  const bookId : number | undefined = Number(history.location.pathname.split(\"/\").pop());\r\n\r\n  const book : BookResType | undefined = books?.filter(v => v.bookId === bookId).pop();\r\n\r\n  const editBook = useCallback((book : BookReqType) => {\r\n    dispatch(editBookSaga(book, bookId));\r\n  }, [bookId, dispatch]);\r\n  \r\n  // [project] saga 함수를 실행하는 액션 생성 함수를 실행하는 함수를 컨테이너에 작성했다.\r\n  // [project] 컨테이너에서 useDispatch, useSelector, useCallback 을 활용해서 중복없이 비동기 데이터를 보여주도록 처리했다.\r\n  // [project] Edit 나 Detail 컴포넌트에서 새로고침 시, 리스트가 없는 경우, 리스트를 받아오도록 처리했다.\r\n\r\n  return <Edit book={book} loading={false} logout={logout} onGoBack={onGoBack} editBook={editBook} />;\r\n};\r\n\r\nexport default EditContainer;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport useToken from '../hooks/useToken';\r\nimport EditContainer from '../containers/EditContainer';\r\n\r\nconst Edit = () => {\r\n  const token = useToken();\r\n  if (token === null) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  return <EditContainer />;\r\n};\r\n\r\nexport default Edit;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Add from './pages/Add';\r\nimport Signin from './pages/Signin';\r\nimport NotFound from './pages/NotFound';\r\nimport Error from './pages/Error';\r\nimport ErrorBoundary from 'react-error-boundary';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { history } from './redux/create';\r\nimport Detail from './pages/Detail';\r\nimport Edit from './pages/Edit';\r\n\r\nconst App = () => {\r\n  return (\r\n    <ErrorBoundary FallbackComponent={Error}>\r\n      <ConnectedRouter history={history}>\r\n        <Switch>\r\n          <Route exact path=\"/edit/:id\" component={Edit} />\r\n          <Route exact path=\"/book/:id\" component={Detail} />\r\n          <Route exact path=\"/signin\" component={Signin} />\r\n          <Route exact path=\"/add\" component={Add} />\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </ConnectedRouter>\r\n    </ErrorBoundary>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport create from './redux/create';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nconst {store, persistor} = create();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Edit_bg__2TS2z\",\"edit\":\"Edit_edit__3cSYZ\",\"input_title\":\"Edit_input_title__1k9S4\",\"input_comment\":\"Edit_input_comment__3uLmE\",\"input_author\":\"Edit_input_author__15_fF\",\"input_url\":\"Edit_input_url__3CZK2\",\"required\":\"Edit_required__1itsW\",\"input_area\":\"Edit_input_area__2-GTq\",\"input\":\"Edit_input__22_1w\",\"button_area\":\"Edit_button_area__GO0si\",\"button\":\"Edit_button__3NHV0\",\"button_logout\":\"Edit_button_logout__3P9yA\",\"back_button\":\"Edit_back_button__30F5r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signin_row\":\"Signin_signin_row__aEbK8\",\"signin_title\":\"Signin_signin_title__3aOnf\",\"signin_subtitle\":\"Signin_signin_subtitle__yRQjV\",\"signin_underline\":\"Signin_signin_underline__2NCQg\",\"signin_contents\":\"Signin_signin_contents__eJxj4\",\"signin_bg\":\"Signin_signin_bg__1d576\",\"email_title\":\"Signin_email_title__2Gwr7\",\"password_title\":\"Signin_password_title__1bH47\",\"required\":\"Signin_required__1AQRP\",\"input_area\":\"Signin_input_area__3Sa6j\",\"input\":\"Signin_input__6Sgq7\",\"button_area\":\"Signin_button_area__1rWa6\",\"button\":\"Signin_button__tpV4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"Detail_detail__1UEk9\",\"bg\":\"Detail_bg__1r32a\",\"message_title\":\"Detail_message_title__8RQ8a\",\"message\":\"Detail_message__GrHxH\",\"message_textarea\":\"Detail_message_textarea__2YZa5\",\"button_area\":\"Detail_button_area__1Cxkg\",\"button\":\"Detail_button__15bOa\",\"back_button\":\"Detail_back_button__18GFJ\"};"],"sourceRoot":""}